0TAG_Compound('testCompoundTagOuter'): 3 entries
{
#    TAG_Int('testIntTagOuter1'): 4
#    TAG_Int('testIntTagOuter2'): 5
4    TAG_Compound('testCompoundTagInner'): 3 entries
    {
'        TAG_Int('testIntTagInner1'): 2
'        TAG_Int('testIntTagInner2'): 3
>        TAG_Compound('testCompoundTagDoubleInner'): 2 entries

        {
1            TAG_Int('testIntTagDoubleInner1'): 0
1            TAG_Int('testIntTagDoubleInner2'): 1

        }
    }
}

0TAG_Compound('testCompoundTagOuter'): 3 entries
{
#    TAG_Int('testIntTagOuter1'): 3
#    TAG_Int('testIntTagOuter2'): 4
4    TAG_Compound('testCompoundTagInner'): 2 entries
    {
'        TAG_Int('testIntTagInner1'): 1
'        TAG_Int('testIntTagInner2'): 2
    }
}

)TAG_Compound('testCompoundTag'): 1 entry
{
    TAG_Int('testIntTag'): 1
}

